import { Telegraf } from "telegraf";
import { getAIRepsonse } from "./ai.js";
import dotenv from "dotenv";
dotenv.config();
const token = process.env.TOKEN;
if (!token) {
    throw new Error("BOT_TOKEN is not set in environment variables.");
}
const bot = new Telegraf(token);
bot.start(async (ctx) => {
    await ctx.reply("–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ—è —Å—É—á–∫–∞ –∏ –≥–æ—Ç–æ–≤–∞ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã!))");
    await ctx.reply("–ó–∞–¥–∞–≤–∞–π –ø–æ —Å–∫–æ—Ä–µ–µ, —è –±—É–¥—É –≤–µ–∂–ª–∏–≤–∞ —Å —Ç–æ–±–æ–π)");
    await ctx.reply("–ú—è—è—É)) –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –¥–æ–ø. –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–∏—à–∏ '/help'");
});
bot.help((ctx) => {
    ctx.reply('AI - –º–æ–¥–µ–ª—å: nous-Q8. –î–ª—è —Å–≤—è–∑–∏ —Å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º –ø–∏—à–∏—Ç–µ –≤ tg: @dinar2202 ');
});
bot.on("text", async (ctx) => {
    try {
        if (!ctx.message || !("text" in ctx.message)) {
            await ctx.reply("–Ø –ø–æ–Ω–∏–º–∞—é —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.");
            return;
        }
        const userMessage = ctx.message.text;
        const thinkingMsg = await ctx.reply("–§–æ—Ä–º—É–ª–∏—Ä—É—é –º—ã—Å–ª–∏...");
        const aiReply = await getAIRepsonse(userMessage);
        await ctx.deleteMessage(thinkingMsg.message_id);
        await ctx.reply(aiReply);
    }
    catch (err) {
        console.error("–û—à–∏–±–∫–∞:", err);
        await ctx.reply("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –ò–ò üò¢");
    }
});
bot.launch();
console.log("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!");
